//**************************************************
//
// FPD制作 ( menu.h )
// Author  : katsuki mizuki
//
//**************************************************
#ifndef _MENU_H_		//このマクロ定義がされてなかったら
#define _MENU_H_		//２重インクルード防止のマクロ定義

//==================================================
// マクロ定義
//==================================================
#define MAX_OPTION		(16)		// 選択肢の最大数

//==================================================
// 構造体
//==================================================

/*↓ メニューの引数 ↓*/

typedef struct
{
	LPDIRECT3DTEXTURE9		pTexture[MAX_OPTION];		// テクスチャ
	int						nNumUse;					// 使用数
	float					fLeft;						// 左端
	float					fRight;						// 右端
	float					fTop;						// 上端
	float					fBottom;					// 下端
	float					fWidth;						// 選択肢の幅
	float					fHeight;					// 選択肢の高さ
	bool					bSort;						// 並べ方 [ true : 縦 false : 横 ]
}MenuArgument;

/*↓ 枠の引数 ↓*/

typedef struct
{
	LPDIRECT3DTEXTURE9		pTexture;		// テクスチャ
	D3DXCOLOR				col;			// 色
	bool					bUse;			// 枠がいるかどうか [ true : いる false : いらない ]
}FrameArgument;

//==================================================
// プロトタイプ宣言
//==================================================
//--------------------------------------------------
// 初期化
//--------------------------------------------------
void InitMenu(void);

//--------------------------------------------------
// 終了
//--------------------------------------------------
void UninitMenu(void);

//--------------------------------------------------
// 更新
//--------------------------------------------------
void UpdateMenu(void);

//--------------------------------------------------
// 設定
// 引数1  : MenuArgument menu / 構造体 メニュー情報
// 引数2  : FrameArgument Frame / 構造体 枠の情報
//--------------------------------------------------
int SetMenu(const MenuArgument &menu, const FrameArgument &Frame);

//--------------------------------------------------
// 選択肢の色の初期化
//--------------------------------------------------
void InitColorOption(void);

//--------------------------------------------------
// 選択肢の変更
// 引数  : int nIdx / 選択肢のインデックス
//--------------------------------------------------
void ChangeOption(int nIdx);

//--------------------------------------------------
// 選択肢の決定
//--------------------------------------------------
void DecisionOption(void);

//--------------------------------------------------
// メニューのリセット
// 引数  : int nIdx / メニューのインデックス
//--------------------------------------------------
void ResetMenu(int nIdx);

#endif // !_MENU_H_
